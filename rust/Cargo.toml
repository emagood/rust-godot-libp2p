[package]
name = "rust"
version = "1.0.0"
edition = "2021"
license = "MIT"

[dependencies]
godot = "0.2.4"

#tokio = { version = "1", features = ["full"] }
#futures = "0.3"
#async-trait = "0.1"
#parking_lot = "0.12"

anyhow = "1.0.68"                                                  # ergonomic error handling with context support (e.g., `anyhow::Result`)
bytes = "1.3.0"                                                    # for managing and manipulating byte buffers (used in torrent data exchange)
clap = { version = "4.0.32", features = ["derive"] }               # command-line argument parser (for building CLI interfaces)
hex = "0.4.3"                                                      # for hex encoding/decoding (used in info-hash/logging)
regex = "1"                                                        # regular expressions (e.g., validating tracker URLs or parsing responses)
#///reqwest = { version = "0.11.18", features = ["json", "blocking"] } # HTTP client for communicating with trackers (supports blocking & JSON)
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls", "blocking"] }


serde_bencode = "0.2.3"                                            # for parsing `.torrent` files (Bencode format)
serde_bytes = "0.11.12"                                            # allows compact encoding of `Vec<u8>` as raw bytes (used in peer messages)
serde_json = "1.0"
#serde_json = "1.0.105"                                             # working with JSON (tracker responses or debug outputs)
#serde_urlencoded = "0.7.1"                                         # for encoding tracker GET requests (URL query parameters)
##serde = { version = "1.0", features = ["derive"] }
serde = { version = "1.0.136", features = ["derive"] }             # serialization framework used by many formats like JSON, Bencode
sha1 = "0.10.1"                                                    # hashing (to compute info-hash and verify piece hashes)
## tempfile = "3"                                                     # safely write downloaded pieces to temporary files before saving
## thiserror = "1.0.38"                                               # derive-based custom error enums (used for clean error reporting)
## thiserror = "1.0.38"                                               # derive-based custom error enums (used for clean error reporting)
tokio = { version = "1.23.0", features = ["full"] }                # async runtime (especially useful for multiple peer/tracker connections)
rand = "0.8"                                                       # used to generate random peer IDs or other randomized data


#futures-util = "0.3"
once_cell = "1.18.0"
# openssl = { version = "0.10", features = ["vendored"] }

[lib]
crate-type = ["cdylib"]

[workspace]



